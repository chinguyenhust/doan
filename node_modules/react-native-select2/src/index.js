import React, {Component} from "react";
import {
  Image,
  Keyboard,
  Platform,
  ScrollView,
  StyleSheet,
  Text,
  TextInput,
  View,
  TouchableNativeFeedback
} from "react-native";

export default class Select extends Component {
  constructor(props) {
    super(props);
    this._renderselect = this._renderselect.bind(this);
    this.state = {
      text: '',
      value: null,
      isOpen: false,
      options: this.props.options,
      selectLayout: {},
      zIndex: 1,
    }
  }

  _renderselect() {
    let { options, zIndex, selectLayout, isOpen } = this.state;
    let filterContent = () => {
      if (options.length === 0) {
        return (
          <View style={styles.emptyTextView}> 
            <Text style={styles.emptyText}>No results found</Text>
          </View>  
        );
      }

      return (
        <View > 
          <ScrollView 
            onLayout={({nativeEvent}) => this.setState({selectLayout: nativeEvent.layout})}>
            {
              options.map((item, index) =>
                <TouchableNativeFeedback key={index} onPress={()=>this._selectItem(item, index)}>
                  <View style={styles.items}><Text>{item.label}</Text></View>
                </TouchableNativeFeedback>
              )
            }
            { options.length > 7 && this.emptyView() }
          </ScrollView>
        </View>
      );
    }

    let {content, zIndexView} = (!isOpen ) ? ({
      zIndexView: {},
      content: null
    }) : ({
      zIndexView: {
        zIndex: zIndex + 1,
      },
      content: filterContent()
    });

    return (
      <View style={[ isOpen && styles.selectDropdown, zIndexView]} >
        { 
          isOpen && 
          <View style={styles.search}>
            <TextInput 
              style={styles.searchInput} 
              underlineColorAndroid='transparent'
              value={this.state.text}
              onChangeText={(search)=>this._onChangeText(search)}
            />
          </View>
        }
        {content}
      </View>
    );
  }

  emptyView() {
    return <View style={styles.emptyView} />
  }

  blur() {
    this.setState({
      isOpen : false
    });
  }

  _onChangeText(text) {
    this.setState({text: text});
    this.search(text);
  }

  search(text) {
    let options = this.props.options;
    if(text !== ''){
      let jsObjects = this.props.options;
      options = jsObjects.filter(function(obj) {
        return obj.label.includes(text) ;
      });
    }
    this.setState({options: options})
  }

  _selectItem(item, index) {
    this.setState({
      isOpen: false,
      value: item.label
    })
  }

  render() {
    let { value, zIndex, containerLayout } = this.state;
    let { placeholder } = this.props;
    return (
      <View ref="container" >
        <View style={styles.container}>
          <TouchableNativeFeedback onPress={()=>this.setState({isOpen: !this.state.isOpen})}>
            <View style={styles.selectInput}>
              <Text>{ value || placeholder }</Text>
            </View>
          </TouchableNativeFeedback>
        </View>
        {this._renderselect()}
      </View>
    );
  }
}

Select.defaultProps = {
  options: [],
}

const styles = StyleSheet.create({
  container: {
    borderWidth: .5,
    borderRadius: 5,
    borderColor: "#aaa",
    backgroundColor: "#fff",
  },
  search: {
    margin: 5,
    height: 32,
    borderRadius: 4,
    borderWidth: 0.5,
    borderColor: '#aaa',
  },
  searchInput: {
    fontSize: 15,
  },
  selectInput: {
    height: 34, 
    paddingHorizontal: 5,
    justifyContent: 'center',
  },
  selectDropdown: {
    top: 30,
    left: 0,
    right: 0,
    zIndex: 1051,
    maxHeight: 200,
    position: "absolute",
    borderColor: '#aaa',
    borderLeftWidth: .5,
    borderRightWidth: .5,
    borderBottomWidth: .5,
    backgroundColor: "#fff",
  },
  select: {
    paddingVertical: 8,
  },
  items: {
    height: 40,
    paddingHorizontal: 10,
    justifyContent: 'center'
  },
  selectText: {
    height: 30,
  },
  emptyView: {
    height: 45
  },
  emptyTextView: {
    height: 30, 
    paddingHorizontal: 10,
    justifyContent: 'center', 
    backgroundColor: '#FCF8E3', 
  },
  emptyText: {
    color: '#C09853'
  }
});